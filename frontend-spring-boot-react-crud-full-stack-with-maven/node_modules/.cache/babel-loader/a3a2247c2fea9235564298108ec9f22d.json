{"ast":null,"code":"import _classCallCheck from \"/Users/gavsyuk/Projects/spring-boot-react-fullstack-examples/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gavsyuk/Projects/spring-boot-react-fullstack-examples/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nvar INSTRUCTOR = 'in28minutes';\nvar COURSE_API_URL = 'http://localhost:8080';\nvar INSTRUCTOR_API_URL = \"\".concat(COURSE_API_URL, \"/instructors/\").concat(INSTRUCTOR);\n\nvar CourseDataService =\n/*#__PURE__*/\nfunction () {\n  function CourseDataService() {\n    _classCallCheck(this, CourseDataService);\n  }\n\n  _createClass(CourseDataService, [{\n    key: \"retrieveAllCourses\",\n    value: function retrieveAllCourses(name) {\n      //console.log('executed service')\n      console.log('Local username -- ' + localStorage.getItem('username'));\n      console.log('Local pw -- ' + localStorage.getItem('pw'));\n      AuthenticationService.executeJwtAuthenticationService(localStorage.getItem('username'), localStorage.getItem('pw'));\n      console.log('Post auth call');\n      return axios.get(\"\".concat(INSTRUCTOR_API_URL, \"/courses\"));\n    }\n  }, {\n    key: \"retrieveCourse\",\n    value: function retrieveCourse(name, id) {\n      //console.log('executed service')\n      return axios.get(\"\".concat(INSTRUCTOR_API_URL, \"/courses/\").concat(id));\n    }\n  }, {\n    key: \"deleteCourse\",\n    value: function deleteCourse(name, id) {\n      //console.log('executed service')\n      return axios.delete(\"\".concat(INSTRUCTOR_API_URL, \"/courses/\").concat(id));\n    }\n  }, {\n    key: \"updateCourse\",\n    value: function updateCourse(name, id, course) {\n      //console.log('executed service')\n      return axios.put(\"\".concat(INSTRUCTOR_API_URL, \"/courses/\").concat(id), course);\n    }\n  }, {\n    key: \"createCourse\",\n    value: function createCourse(name, course) {\n      //console.log('executed service')\n      return axios.post(\"\".concat(INSTRUCTOR_API_URL, \"/courses/\"), course);\n    }\n  }, {\n    key: \"setupAxiosInterceptors\",\n    value: function setupAxiosInterceptors(token) {\n      var _this = this;\n\n      console.log(\"Axios -- \" + token);\n      axios.interceptors.request.use(function (config) {\n        if (_this.isUserLoggedIn()) {\n          config.headers.authorization = token;\n        }\n\n        return config;\n      });\n    }\n  }]);\n\n  return CourseDataService;\n}();\n\nexport default new CourseDataService();","map":{"version":3,"sources":["/Users/gavsyuk/Projects/spring-boot-react-fullstack-examples/spring-boot-react-crud-full-stack-with-maven/frontend-spring-boot-react-crud-full-stack-with-maven/src/service/CourseDataService.js"],"names":["axios","INSTRUCTOR","COURSE_API_URL","INSTRUCTOR_API_URL","CourseDataService","name","console","log","localStorage","getItem","AuthenticationService","executeJwtAuthenticationService","get","id","delete","course","put","post","token","interceptors","request","use","config","isUserLoggedIn","headers","authorization"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,UAAU,GAAG,aAAnB;AACA,IAAMC,cAAc,GAAG,uBAAvB;AACA,IAAMC,kBAAkB,aAAMD,cAAN,0BAAoCD,UAApC,CAAxB;;IAEMG,iB;;;;;;;;;uCAEiBC,I,EAAM;AACrB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAlC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA3B;AACAC,MAAAA,qBAAqB,CAACC,+BAAtB,CAAsDH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtD,EAAuFD,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAvF;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAOP,KAAK,CAACY,GAAN,WAAaT,kBAAb,cAAP;AACH;;;mCAEcE,I,EAAMQ,E,EAAI;AACrB;AACA,aAAOb,KAAK,CAACY,GAAN,WAAaT,kBAAb,sBAA2CU,EAA3C,EAAP;AACH;;;iCAEYR,I,EAAMQ,E,EAAI;AACnB;AACA,aAAOb,KAAK,CAACc,MAAN,WAAgBX,kBAAhB,sBAA8CU,EAA9C,EAAP;AACH;;;iCAEYR,I,EAAMQ,E,EAAIE,M,EAAQ;AAC3B;AACA,aAAOf,KAAK,CAACgB,GAAN,WAAab,kBAAb,sBAA2CU,EAA3C,GAAiDE,MAAjD,CAAP;AACH;;;iCAEYV,I,EAAMU,M,EAAQ;AACvB;AACA,aAAOf,KAAK,CAACiB,IAAN,WAAcd,kBAAd,gBAA6CY,MAA7C,CAAP;AACH;;;2CAGsBG,K,EAAO;AAAA;;AAC1BZ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcW,KAA1B;AACAlB,MAAAA,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAACC,MAAD,EAAY;AACR,YAAI,KAAI,CAACC,cAAL,EAAJ,EAA2B;AACvBD,UAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAA+BP,KAA/B;AACH;;AACD,eAAOI,MAAP;AACH,OANL;AAQH;;;;;;AAGL,eAAe,IAAIlB,iBAAJ,EAAf","sourcesContent":["import axios from 'axios'\nconst INSTRUCTOR = 'in28minutes'\nconst COURSE_API_URL = 'http://localhost:8080'\nconst INSTRUCTOR_API_URL = `${COURSE_API_URL}/instructors/${INSTRUCTOR}`\n\nclass CourseDataService {\n\n    retrieveAllCourses(name) {\n        //console.log('executed service')\n        console.log('Local username -- ' +localStorage.getItem('username'))\n        console.log('Local pw -- '+localStorage.getItem('pw'))\n        AuthenticationService.executeJwtAuthenticationService(localStorage.getItem('username'),localStorage.getItem('pw'))\n        console.log('Post auth call')\n        return axios.get(`${INSTRUCTOR_API_URL}/courses`);\n    }\n\n    retrieveCourse(name, id) {\n        //console.log('executed service')\n        return axios.get(`${INSTRUCTOR_API_URL}/courses/${id}`);\n    }\n\n    deleteCourse(name, id) {\n        //console.log('executed service')\n        return axios.delete(`${INSTRUCTOR_API_URL}/courses/${id}`);\n    }\n\n    updateCourse(name, id, course) {\n        //console.log('executed service')\n        return axios.put(`${INSTRUCTOR_API_URL}/courses/${id}`, course);\n    }\n\n    createCourse(name, course) {\n        //console.log('executed service')\n        return axios.post(`${INSTRUCTOR_API_URL}/courses/`, course);\n    }\n\n\n    setupAxiosInterceptors(token) {\n        console.log(\"Axios -- \" + token)\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new CourseDataService()"]},"metadata":{},"sourceType":"module"}